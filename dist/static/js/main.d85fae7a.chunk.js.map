{"version":3,"sources":["components/Webgl.js","contexts/TradContext.js","components/sections/About.js","contexts/LangContext.js","components/sections/Skills.js","components/sections/Projects.js","components/sections/Contact.js","components/Main.js","components/Layout.js","App.js","serviceWorker.js","index.js","assets/avatar.jpg","assets/illustration.png","assets/html5-brands.svg","assets/css3-alt-brands.svg","assets/js-brands.svg","assets/python-brands.svg","assets/react-brands.svg","assets/WebGL_Logo.svg","assets/firebase-logo.png","assets/twitterIcon.svg","assets/githubIcon.svg","assets/linkedinLogo.svg"],"names":["nintendo","Audio","src","volume","Webgl","handleClick","play","canvas","document","querySelector","canvasBounding","getBoundingClientRect","gltfLoader","GLTFLoader","scene","THREE","background","ambientLight","add","directionalLight","position","x","y","z","room","load","gltf","children","length","child","progress","console","log","error","camera","width","height","lookAt","renderer","setSize","window","addEventListener","aspect","updateProjectionMatrix","tick","rotation","render","requestAnimationFrame","className","onClick","this","Component","TradContext","createContext","About","lang","React","useContext","Typography","paragraph","profilePic","illustration","LangContext","useStyles","makeStyles","theme","root","container","display","paper","margin","spacing","cursor","typo","padding","svg","polygon","fill","palette","common","white","stroke","divider","strokeWidth","skillsData","iconClass","imgId","imgAlt","iconSrc","htmlIcon","title","textENG","textFR","cssIcon","jsIcon","pythonIcon","techData","reactIcon","webglIcon","firebaseIcon","Skills","classes","useState","state","setState","handleChange","e","target","currentTarget","getAttribute","split","map","skill","key","id","alt","Grow","in","Paper","elevation","Divider","tech","Projects","Contact","twitterIcon","githubIcon","linkedinIcon","href","Main","drawer","breakpoints","up","flexShrink","appBar","zIndex","menuButton","flexGrow","fontSize","toolbar","mixins","drawerPaper","content","Layout","props","useTheme","mobileOpen","setMobileOpen","checkedLng","setCheckedLng","actualLang","setActualLang","handleDrawerToggle","drawerData","List","text","activeClass","to","spy","smooth","offset","duration","ListItem","button","ListItemIcon","ListItemText","primary","component","Grid","alignItems","item","Switch","checked","onChange","event","name","color","undefined","body","CssBaseline","AppBar","Toolbar","variant","noWrap","IconButton","aria-label","edge","Hidden","smUp","implementation","Drawer","anchor","open","onClose","ModalProps","keepMounted","xsDown","Provider","value","App","Boolean","location","hostname","match","ReactDOM","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message","module","exports"],"mappings":"qeAKMA,G,MAAW,IAAIC,OACrBD,EAASE,IAAM,eACfF,EAASG,OAAS,G,IA0FHC,E,4MAVXC,YAAc,WAEVL,EAASM,Q,kEA7ET,IAAMC,EAASC,SAASC,cAAc,gBAChCC,EAAiBH,EAAOI,wBACxBC,EAAa,IAAIC,IAEjBC,EAAQ,IAAIC,IAClBD,EAAME,WAAa,IAAID,IAAY,UAEnC,IAAME,EAAe,IAAIF,IAAmB,SAAU,IACtDD,EAAMI,IAAID,GAEV,IAAME,EAAmB,IAAIJ,IAAuB,SAAU,GAC9DI,EAAiBC,SAASC,EAAI,EAC9BF,EAAiBC,SAASE,EAAI,EAC9BH,EAAiBC,SAASG,EAAI,EAC9BT,EAAMI,IAAIC,GAEV,IAAMK,EAAO,IAAIT,IAEjBH,EAAWa,KACP,0BACA,SAACC,GACG,KAAOA,EAAKZ,MAAMa,SAASC,QAAQ,CAC/B,IAAMC,EAAQH,EAAKZ,MAAMa,SAAS,GAClCH,EAAKN,IAAIW,OAGjB,SAACC,GACGC,QAAQC,IAAI,YACZD,QAAQC,IAAIF,MAEhB,SAACG,GACGF,QAAQC,IAAI,SACZD,QAAQC,IAAIC,MAGpBnB,EAAMI,IAAIM,GACV,IAAMU,EAAS,IAAInB,IAAwB,GAAIL,EAAeyB,MAAQzB,EAAe0B,OAAQ,IAAM,KACnGF,EAAOd,SAASG,EAAI,EACpBW,EAAOd,SAASC,EAAI,EAEpBa,EAAOd,SAASE,EAAI,EACpBR,EAAMI,IAAIgB,GACVA,EAAOG,OAAO,IAAItB,KAAc,EAAG,EAAG,IAQtC,IAAMuB,EAAW,IAAIvB,KAAoB,CAAER,OAAQA,IACnD+B,EAASC,QAAQ7B,EAAeyB,MAAOzB,EAAe0B,QAGtDI,OAAOC,iBAAiB,UAAU,WAC9B,IAAM/B,EAAiBH,EAAOI,wBAE9BuB,EAAOQ,OAAShC,EAAeyB,MAAQzB,EAAe0B,OACtDF,EAAOS,yBAEPL,EAASC,QAAQ7B,EAAeyB,MAAOzB,EAAe0B,YAI7C,SAAPQ,IACFpB,EAAKqB,SAASvB,GAAK,KAEnBgB,EAASQ,OAAOhC,EAAOoB,GAEvBM,OAAOO,sBAAsBH,GAGjCA,K,+BAQA,OACI,4BAAQI,UAAU,QAAQC,QAASC,KAAK7C,kB,GApFhC8C,a,2CCPPC,G,cAAcC,wBAAc,QCoD1BC,EA7CD,WACV,IAAIC,EAAOC,IAAMC,WAAWL,GAC5B,OACI,6BAASJ,UAAU,QACf,yBAAKA,UAAU,aAED,QAATO,EACK,oCAEE,mDACA,kBAACG,EAAA,EAAD,CAAYC,WAAS,EAACX,UAAU,oBAAhC,6GAIF,oCAEE,qDACA,kBAACU,EAAA,EAAD,CAAYC,WAAS,EAACX,UAAU,oBAAhC,kIAKR,yBAAKA,UAAU,oBACX,yBAAKA,UAAU,kBACX,6BACI,yBAAKA,UAAU,aAAaZ,OAAO,MAAMD,MAAM,MAAMjC,IAAK0D,QAIlE,kBAAC,EAAD,QA1BZ,IA+BI,yBAAKZ,UAAU,aACX,yBAAKA,UAAU,oBACX,yBAAKA,UAAU,eAAe9C,IAAK2D,U,8JC3C1CC,GAAcT,0BCgBrBU,IDd4BZ,YCchBa,aAAW,SAACC,GAAD,MAAY,CACrCC,KAAM,CACF9B,OAAQ,KAEZ+B,UAAW,CACPC,QAAS,QAEbC,MAAO,CACHC,OAAQL,EAAMM,QAAQ,GACtBpC,MAAO,IACPf,SAAU,WACVoD,OAAQ,WAEZC,KAAM,CACFC,QAAST,EAAMM,QAAQ,IAE3BI,IAAK,CACDxC,MAAO,IACPC,OAAQ,KAEZwC,QAAS,CACLC,KAAMZ,EAAMa,QAAQC,OAAOC,MAC3BC,OAAQhB,EAAMa,QAAQI,QACtBC,YAAa,QAMfC,GAAa,CACf,CACIC,UAAW,WACXC,MAAO,WACPC,OAAQ,QACRC,QAASC,IACTC,MAAO,SACPC,QAAS,2DACTC,OAAQ,gDAGZ,CACIP,UAAW,UACXC,MAAO,UACPC,OAAQ,OACRC,QAASK,IACTH,MAAO,QACPC,QAAS,0DACTC,OAAQ,+CAGZ,CACIP,UAAW,SACXC,MAAO,SACPC,OAAQ,aACRC,QAASM,IACTJ,MAAO,aACPC,QAAS,+DACTC,OAAQ,sDAEZ,CACIP,UAAW,aACXC,MAAO,aACPC,OAAQ,SACRC,QAASO,IACTL,MAAO,SACPC,QAAQ,uEACRC,OAAQ,6EAGVI,GAAW,CACb,CACIX,UAAW,YACXC,MAAO,YACPC,OAAQ,UACRC,QAASS,IACTP,MAAO,UACPC,QAAS,sEACTC,OAAQ,iFAEZ,CACIP,UAAW,YACXC,MAAO,YACPC,OAAQ,QACRC,QAASU,IACTR,MAAO,QACPC,QAAS,8FACTC,OAAQ,4HAEZ,CACIP,UAAW,eACXC,MAAO,eACPC,OAAQ,WACRC,QAASW,KACTT,MAAO,WACPC,QAAS,kEACTC,OAAQ,0FAyHDQ,GArHA,WACX,IAAMC,EAAUtC,KACZR,EAAOC,IAAMC,WAAWL,GAFX,EAISI,IAAM8C,SAAS,CACrCb,UAAU,EACVI,SAAS,EACTC,QAAQ,EACRC,YAAY,EACZE,WAAW,EACXC,WAAW,EACXC,cAAc,IAXD,mBAIVI,EAJU,KAIHC,EAJG,KAaXC,EAAe,SAACC,GAElB,IAAMC,EAASD,EAAEE,cAAcC,aAAa,SAASC,MAAM,KAAK,GAChEN,EAAS,aACLf,UAAU,EACVI,SAAS,EACTC,QAAQ,EACRC,YAAY,GACXY,GAAUJ,EAAMI,MAGzB,OACI,6BAAS3D,UAAU,UAEL,QAATO,EACK,oCACE,8EACA,kBAACG,EAAA,EAAD,CAAYC,WAAS,EAACX,UAAU,qBAAhC,8QAKF,oCACE,qEACA,kBAACU,EAAA,EAAD,CAAYC,WAAS,EAACX,UAAU,qBAAhC,0TAQE,QAATO,EACK,oCACE,yCACA,qDAEF,oCACE,kDACA,2DAGR,yBAAKP,UAAU,cACVoC,GAAW2B,KAAI,SAAAC,GACZ,OACI,yBAAKC,IAAKD,EAAM1B,MAAOtC,UAAS,eAAUgE,EAAM3B,WAAapC,QAASwD,GAClE,yBAAKvG,IAAK8G,EAAMxB,QAAS0B,GAAIF,EAAM1B,MAAO6B,IAAG,UAAKH,EAAMzB,OAAX,SAA0BpD,MAnIjF,OAmImGC,OAnInG,SAoIU,0BAAMY,UAAU,eAAegE,EAAMtB,OACrC,kBAAC0B,GAAA,EAAD,CAAMC,GAAId,EAAMS,EAAM3B,YAClB,kBAACiC,GAAA,EAAD,CAAOC,UAAW,EAAGvE,UAAWqD,EAAQhC,OACpC,kBAACX,EAAA,EAAD,CAAYV,UAAWqD,EAAQ5B,MAC1BuC,EAAMtB,OAEX,kBAAC8B,EAAA,EAAD,MACA,kBAAC9D,EAAA,EAAD,CAAYV,UAAWqD,EAAQ5B,MACjB,QAATlB,EACKyD,EAAMrB,QACNqB,EAAMpB,eAU9B,QAATrC,EACK,uDACA,8DAEN,yBAAKP,UAAU,YACVgD,GAASe,KAAI,SAAAU,GACV,OACI,yBAAKR,IAAKQ,EAAKnC,MAAOtC,UAAS,eAAUyE,EAAKpC,WAAapC,QAASwD,GAE9C,YAAdgB,EAAK/B,MACC,yBAAKxF,IAAKuH,EAAKjC,QAAS0B,GAAIO,EAAKnC,MAAO6B,IAAG,UAAKM,EAAKlC,OAAV,SAAyBpD,MAAO,GAAIC,OAAQ,KACvF,yBAAKlC,IAAKuH,EAAKjC,QAAS0B,GAAIO,EAAKnC,MAAO6B,IAAG,UAAKM,EAAKlC,OAAV,SAAyBpD,MAnKxF,OAmK0GC,OAnK1G,SAqKU,0BAAMY,UAAU,eAAeyE,EAAK/B,OACpC,kBAAC0B,GAAA,EAAD,CAAMC,GAAId,EAAMkB,EAAKpC,YACjB,kBAACiC,GAAA,EAAD,CAAOC,UAAW,EAAGvE,UAAWqD,EAAQhC,OACpC,kBAACX,EAAA,EAAD,CAAYV,UAAWqD,EAAQ5B,MAC1BgD,EAAK/B,OAEV,kBAAC8B,EAAA,EAAD,MACA,kBAAC9D,EAAA,EAAD,CAAYV,UAAWqD,EAAQ5B,MACjB,QAATlB,EACKkE,EAAK9B,QACL8B,EAAK7B,iBC1LpC8B,I,OA/BE,WAEb,OACI,6BAAS1E,UAAU,YACf,gDACA,yBAAKA,UAAU,gBAEX,6BAASA,UAAU,qBAGnB,6BAASA,UAAU,uBAGnB,6BAASA,UAAU,qBAGnB,6BAASA,UAAU,qBAGnB,6BAASA,UAAU,uBAGnB,6BAASA,UAAU,oB,qECapB2E,GA7BC,WACZ,IAAIpE,EAAOC,IAAMC,WAAWL,GAC5B,OACI,6BAASJ,UAAU,WAEL,QAATO,EACK,4DACA,0EAEN,yBAAKP,UAAU,gBACX,yBAAK9C,IAAK0H,KAAaT,IAAI,eAAehF,MAXzC,GAW0DC,OAX1D,KAYD,yBAAKlC,IAAK2H,KAAYV,IAAI,cAAchF,MAZvC,GAYwDC,OAZxD,KAaD,yBAAKlC,IAAK4H,KAAcX,IAAI,gBAAgBhF,MAb3C,GAa4DC,OAb5D,MAgBK,QAATmB,EACK,0DACA,8DAGN,yBAAKP,UAAU,aACX,2BAAG,uBAAG+E,KAAK,wDAAR,kCCbJC,OAVf,WACI,OACI,6BACI,kBAAC,EAAD,MACA,kBAAC,GAAD,MACA,kBAAC,GAAD,MACA,kBAAC,GAAD,Q,6GCuBNjE,GAAYC,aAAW,SAACC,GAAD,MAAY,CACrCC,KAAM,CACFE,QAAS,QAEb6D,OAAO,eACFhE,EAAMiE,YAAYC,GAAG,MAAQ,CAC1BhG,MAZQ,IAaRiG,WAAY,IAGpBC,OAAQ,CACJC,OAAQrE,EAAMqE,OAAOL,OAAS,GAElCM,WAAW,eACNtE,EAAMiE,YAAYC,GAAG,MAAQ,CAC1B/D,QAAS,SAGjBsB,MAAO,CACH8C,SAAU,EACVC,SAAS,QAGbC,QAASzE,EAAM0E,OAAOD,QACtBE,YAAa,CACTzG,MA/BY,KAiChB0G,QAAS,CACLL,SAAU,OA8IHM,OA1If,SAAgBC,GAAQ,IACZvG,EAAWuG,EAAXvG,OACF6D,EAAUtC,KAFG,GAGLiF,cACsBxF,IAAM8C,UAAS,IAJhC,mBAIZ2C,EAJY,KAIAC,EAJA,OAKiB1F,IAAM8C,UAAS,GALhC,mBAKZ6C,EALY,KAKAC,EALA,OAMiB5F,IAAM8C,SAAS,OANhC,mBAMZ+C,EANY,KAMAC,EANA,KAQbC,EAAqB,WACvBL,GAAeD,IAQbO,EAAa,CACf,CAAgB,QAAfH,EAAuB,QAAU,WAAY,kBAAC,KAAD,MAAc,QAC5D,CAAgB,QAAfA,EAAuB,SAAW,iBAAe,kBAAC,KAAD,MAAkB,UACpE,CAAgB,QAAfA,EAAuB,WAAa,UAAW,kBAAC,KAAD,MAAsB,YACtE,CAAgB,QAAfA,EAAuB,aAAe,eAAgB,kBAAC,IAAD,MAAc,YAEnEpB,EACF,6BACI,yBAAKjF,UAAWqD,EAAQqC,UACxB,kBAAClB,EAAA,EAAD,MACA,kBAACiC,EAAA,EAAD,KAEQD,EAAWzC,KAAI,SAAA2C,GAAI,OACf,kBAAC,QAAD,CACIC,YAAY,SACZC,GAAIF,EAAK,GACTG,KAAK,EACLC,QAAQ,EACRC,QAAS,GACTC,SAAU,IACV/C,IAAKyC,EAAK,IACV,kBAACO,EAAA,EAAD,CAAUC,QAAM,GACZ,kBAACC,EAAA,EAAD,KAAeT,EAAK,IACpB,kBAACU,EAAA,EAAD,CAAcC,QAASX,EAAK,UAI5C,kBAACO,EAAA,EAAD,CAAUC,QAAM,EAACjD,IAAI,mBACjB,kBAACkD,EAAA,EAAD,KAAc,kBAAC,KAAD,OACd,kBAACC,EAAA,EAAD,CAAcC,QAAwB,QAAfhB,EAAuB,kBAAoB,0BAGtE,kBAACY,EAAA,EAAD,CAAUhD,IAAI,cACV,kBAACvD,EAAA,EAAD,CAAY4G,UAAU,OAClB,kBAACC,GAAA,EAAD,CAAMD,UAAU,QAAQnG,WAAS,EAACqG,WAAW,SAASjG,QAAS,GAC3D,kBAACgG,GAAA,EAAD,CAAME,MAAI,GAAV,OAIA,kBAACF,GAAA,EAAD,CAAME,MAAI,GACN,kBAACC,GAAA,EAAD,CACIC,QAASxB,EACTyB,SAhDX,SAACC,GAClBzB,EAAcyB,EAAMlE,OAAOgE,SAC3BE,EAAMlE,OAAOgE,QACPrB,EAAc,MACdA,EAAc,QA6CQwB,KAAK,aACLC,MAAM,aAGd,kBAACR,GAAA,EAAD,CAAME,MAAI,GAAV,WAalBtG,OAAuB6G,IAAXxI,EAAuB,kBAAMA,IAAShC,SAASyK,WAAOD,EACxE,OACI,yBAAKhI,UAAWqD,EAAQnC,MACpB,kBAACgH,EAAA,EAAD,MACA,kBAACC,EAAA,EAAD,CAAQ/J,SAAS,QAAQ4B,UAAWqD,EAAQgC,QACxC,kBAAC+C,EAAA,EAAD,KACI,kBAAC1H,EAAA,EAAD,CAAYV,UAAWqD,EAAQX,MAAO2F,QAAQ,KAAKC,QAAM,GAAzD,sBAGA,kBAACC,EAAA,EAAD,CACIR,MAAM,UACNS,aAAW,cACXC,KAAK,MACLxI,QAASsG,EACTvG,UAAWqD,EAAQkC,YAEnB,kBAAC,IAAD,SAIZ,yBAAKvF,UAAWqD,EAAQ4B,OAAQuD,aAAW,mBAEvC,kBAACE,EAAA,EAAD,CAAQC,MAAI,EAACC,eAAe,OACxB,kBAACC,EAAA,EAAD,CACI1H,UAAWA,EACXkH,QAAQ,YACRS,OAAO,QACPC,KAAM9C,EACN+C,QAASzC,EACTlD,QAAS,CACLhC,MAAOgC,EAAQuC,aAEnBqD,WAAY,CACRC,aAAa,IAGhBjE,IAGT,kBAACyD,EAAA,EAAD,CAAQS,QAAM,EAACP,eAAe,OAC1B,kBAACC,EAAA,EAAD,CACIxF,QAAS,CACLhC,MAAOgC,EAAQuC,aAEnByC,QAAQ,YACRU,MAAI,GAEH9D,KAIb,0BAAMjF,UAAWqD,EAAQwC,SACrB,yBAAK7F,UAAWqD,EAAQqC,UACxB,kBAACtF,EAAYgJ,SAAb,CAAsBC,MAAOhD,GACzB,kBAAC,GAAD,U,SC1LLiD,OATf,WACI,OACI,kBAAC,KAAD,KACI,yBAAKtJ,UAAU,OACX,kBAAC,GAAD,SCIIuJ,QACW,cAA7B/J,OAAOgK,SAASC,UAEe,UAA7BjK,OAAOgK,SAASC,UAEhBjK,OAAOgK,SAASC,SAASC,MACvB,2DCXNC,IAAS7J,OAAO,kBAAC,GAAD,MAAStC,SAASoM,eAAe,SD4H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAlL,GACLF,QAAQE,MAAMA,EAAMmL,a,mBEzI5BC,EAAOC,QAAU,IAA0B,oC,mBCA3CD,EAAOC,QAAU,IAA0B,0C,mBCA3CD,EAAOC,QAAU,IAA0B,0C,mBCA3CD,EAAOC,QAAU,IAA0B,6C,mBCA3CD,EAAOC,QAAU,IAA0B,uC,mBCA3CD,EAAOC,QAAU,IAA0B,2C,mBCA3CD,EAAOC,QAAU,IAA0B,0C,mBCA3CD,EAAOC,QAAU,IAA0B,wC,mBCA3CD,EAAOC,QAAU,IAA0B,2C,mBCA3CD,EAAOC,QAAU,IAA0B,yC,mBCA3CD,EAAOC,QAAU,IAA0B,wC,mBCA3CD,EAAOC,QAAU,IAA0B,0C","file":"static/js/main.d85fae7a.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport * as THREE from \"three\";\r\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader'\r\nimport './Webgl.css'\r\n\r\nconst nintendo = new Audio()\r\nnintendo.src = \"nintendo.wav\"\r\nnintendo.volume = 0.2;\r\n\r\nclass Webgl extends Component {\r\n    componentDidMount() {\r\n        // === THREE.JS CODE START ===\r\n        const canvas = document.querySelector('canvas.webgl')\r\n        const canvasBounding = canvas.getBoundingClientRect()\r\n        const gltfLoader = new GLTFLoader()\r\n\r\n        const scene = new THREE.Scene()\r\n        scene.background = new THREE.Color(0xfafafa);\r\n\r\n        const ambientLight = new THREE.AmbientLight(0xffffff, 0.2)\r\n        scene.add(ambientLight)\r\n\r\n        const directionalLight = new THREE.DirectionalLight(0xffffff, 1)\r\n        directionalLight.position.x = 5\r\n        directionalLight.position.y = 5\r\n        directionalLight.position.z = 5\r\n        scene.add(directionalLight)\r\n\r\n        const room = new THREE.Group()\r\n        // room.scale.set(0.001, 0.001, 0.001)\r\n        gltfLoader.load(\r\n            'models/room/scene.gltf',\r\n            (gltf) => {\r\n                while (gltf.scene.children.length) {\r\n                    const child = gltf.scene.children[0]\r\n                    room.add(child)\r\n                }\r\n            },\r\n            (progress) => {\r\n                console.log('progress')\r\n                console.log(progress)\r\n            },\r\n            (error) => {\r\n                console.log('error')\r\n                console.log(error)\r\n            }\r\n        )\r\n        scene.add(room)\r\n        const camera = new THREE.PerspectiveCamera(75, canvasBounding.width / canvasBounding.height, 0.01, 100)\r\n        camera.position.z = 7\r\n        camera.position.x = 5\r\n\r\n        camera.position.y = 8\r\n        scene.add(camera)\r\n        camera.lookAt(new THREE.Vector3(0, 0, 0))\r\n\r\n        // const cube = new THREE.Mesh(\r\n        //     new THREE.BoxBufferGeometry(1, 1, 1),\r\n        //     new THREE.MeshNormalMaterial()\r\n        // )\r\n        // scene.add(cube)\r\n\r\n        const renderer = new THREE.WebGLRenderer({ canvas: canvas })\r\n        renderer.setSize(canvasBounding.width, canvasBounding.height)\r\n\r\n        // Resize\r\n        window.addEventListener('resize', () => {\r\n            const canvasBounding = canvas.getBoundingClientRect()\r\n\r\n            camera.aspect = canvasBounding.width / canvasBounding.height\r\n            camera.updateProjectionMatrix()\r\n\r\n            renderer.setSize(canvasBounding.width, canvasBounding.height)\r\n        })\r\n\r\n        // Animation\r\n        const tick = () => {\r\n            room.rotation.y += 0.005\r\n\r\n            renderer.render(scene, camera)\r\n\r\n            window.requestAnimationFrame(tick)\r\n        }\r\n\r\n        tick()\r\n    }\r\n\r\n    handleClick = () => {\r\n\r\n        nintendo.play()\r\n    }\r\n    render() {\r\n        return (\r\n            <canvas className=\"webgl\" onClick={this.handleClick}></canvas>\r\n        )\r\n    }\r\n}\r\nexport default Webgl;","import {createContext} from 'react';\r\n\r\nexport const TradContext = createContext(\"ENG\")","import React from 'react'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport profilePic from '../../assets/avatar.jpg'\r\nimport illustration from '../../assets/illustration.png'\r\nimport LazyLoad from 'react-lazy-load';\r\nimport Webgl from '../Webgl'\r\nimport './styles/About.css'\r\nimport { TradContext } from '../../contexts/TradContext';\r\n\r\nconst About = () => {\r\n    let lang = React.useContext(TradContext);\r\n    return (\r\n        <section className=\"hero\">\r\n            <div className=\"hero-body\">\r\n\r\n                {lang === \"ENG\"\r\n                    ? <>\r\n\r\n                        <h1>Front-end Developer</h1>\r\n                        <Typography paragraph className=\"aboutDescription\">\r\n                            I've been interested in programming since I was 13, I love what I do, especially bringing ideas to life.\r\n        </Typography>\r\n                    </>\r\n                    : <>\r\n\r\n                        <h1>Developpeur Front-end</h1>\r\n                        <Typography paragraph className=\"aboutDescription\">\r\n                            Je m'intéresse à la programmation depuis que j'ai 13 ans, j'adore ce que je fais, surtout donner vie à mes idées.\r\n        </Typography>\r\n                    </>\r\n                }\r\n                <div className=\"hero-body-center\">\r\n                    <div className=\"profilePicCtnr\">\r\n                        <div>\r\n                            <img className=\"profilePic\" height=\"150\" width=\"150\" src={profilePic}></img>\r\n\r\n                        </div>\r\n                    </div>\r\n                    <Webgl />\r\n\r\n                </div>\r\n            </div>\r\ns\r\n            <div className=\"hero-foot\">\r\n                <div className=\"illustrationCtnr\">\r\n                    <img className=\"illustration\" src={illustration}></img>\r\n                </div>\r\n            </div>\r\n\r\n        </section>\r\n    )\r\n\r\n}\r\n\r\nexport default About","import React, { createContext, Component, Children } from 'react';\r\n\r\nexport const LangContext = createContext();\r\n\r\nclass LangContextProvider extends Component {\r\n    state = {\r\n        language: \"ENG\"\r\n    }\r\n    changeLang = () => {\r\n        {\r\n            this.state === \"ENG\"\r\n                ? this.setState({ language: \"FR\" })\r\n                : this.setState({ language: \"ENG\" })\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <LangContext.Provider value={{ ...this.state, changeLang: this.changeLang }}>\r\n                {this.props.children}\r\n            </LangContext.Provider>\r\n        );\r\n    }\r\n}\r\n\r\nexport default LangContextProvider;","import React from 'react'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport './styles/Skills.css'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport htmlIcon from '../../assets/html5-brands.svg'\r\nimport cssIcon from '../../assets/css3-alt-brands.svg'\r\nimport jsIcon from '../../assets/js-brands.svg'\r\nimport pythonIcon from '../../assets/python-brands.svg'\r\nimport reactIcon from '../../assets/react-brands.svg'\r\nimport webglIcon from '../../assets/WebGL_Logo.svg'\r\nimport firebaseIcon from '../../assets/firebase-logo.png'\r\nimport Divider from '@material-ui/core/Divider';\r\n\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grow from '@material-ui/core/Grow';\r\nimport { LangContext } from '../../contexts/LangContext';\r\nimport { TradContext } from '../../contexts/TradContext';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        height: 180,\r\n    },\r\n    container: {\r\n        display: 'flex',\r\n    },\r\n    paper: {\r\n        margin: theme.spacing(1),\r\n        width: 200,\r\n        position: 'absolute',\r\n        cursor: 'default'\r\n    },\r\n    typo: {\r\n        padding: theme.spacing(1),\r\n    },\r\n    svg: {\r\n        width: 100,\r\n        height: 100,\r\n    },\r\n    polygon: {\r\n        fill: theme.palette.common.white,\r\n        stroke: theme.palette.divider,\r\n        strokeWidth: 1,\r\n    },\r\n}));\r\n\r\nconst iconsSize = \"90px\"\r\n\r\nconst skillsData = [\r\n    {\r\n        iconClass: 'htmlIcon',\r\n        imgId: 'htmlShow',\r\n        imgAlt: 'HTML5',\r\n        iconSrc: htmlIcon,\r\n        title: 'HTML 5',\r\n        textENG: 'Its been nearly a year that I started coding with HTML 5',\r\n        textFR: 'Cela fait presque 1 an que je code avec HTML'\r\n\r\n    },\r\n    {\r\n        iconClass: 'cssIcon',\r\n        imgId: 'cssShow',\r\n        imgAlt: 'CSS3',\r\n        iconSrc: cssIcon,\r\n        title: 'CSS 3',\r\n        textENG: 'Its been nearly a year that I started coding with CSS 3',\r\n        textFR: 'Cela fait presque 1 an que je code avec CSS'\r\n\r\n    },\r\n    {\r\n        iconClass: 'jsIcon',\r\n        imgId: 'jsShow',\r\n        imgAlt: 'JavaScript',\r\n        iconSrc: jsIcon,\r\n        title: 'JavaScript',\r\n        textENG: 'Its been nearly a year that I started coding with JavaScript',\r\n        textFR: 'Cela fait presque 1 an que je code avec JavaScript'\r\n    },\r\n    {\r\n        iconClass: 'pythonIcon',\r\n        imgId: 'pythonShow',\r\n        imgAlt: 'Python',\r\n        iconSrc: pythonIcon,\r\n        title: 'Python',\r\n        textENG: `I've begun started coding with python since 2015. I really like it !`,\r\n        textFR: \"J'ai commencé à utiliser Python depuis 2015. J'adore ce language !\"\r\n    },\r\n]\r\nconst techData = [\r\n    {\r\n        iconClass: 'reactIcon',\r\n        imgId: 'reactShow',\r\n        imgAlt: 'ReactJS',\r\n        iconSrc: reactIcon,\r\n        title: 'ReactJS',\r\n        textENG: 'I just begun using this technology. Already falling in love for it!',\r\n        textFR: \"J'ai recemment commencé a utiliser ReactJS. J'en suis déjà amoureux!\"\r\n    },\r\n    {\r\n        iconClass: 'webglIcon',\r\n        imgId: 'webglShow',\r\n        imgAlt: 'WebGL',\r\n        iconSrc: webglIcon,\r\n        title: 'WebGL',\r\n        textENG: 'I also just begun with it, I love the the way its working. I am also using ThreeJS with it!',\r\n        textFR: \"J'ai aussi commencé recemment a utiliser WebGL, j'adore la manière dont il marche. J'utilise aussi ThreeJS avec...\"\r\n    },\r\n    {\r\n        iconClass: 'firebaseIcon',\r\n        imgId: 'firebaseShow',\r\n        imgAlt: 'Firebase',\r\n        iconSrc: firebaseIcon,\r\n        title: 'Firebase',\r\n        textENG: 'I did some projects with this tool, really powerful and useful!',\r\n        textFR: \"J'ai déjà fais quelques projets avec Firebase, c'est très puissant et utile!\"\r\n    },\r\n]\r\n\r\nconst Skills = () => {\r\n    const classes = useStyles();\r\n    let lang = React.useContext(TradContext);\r\n\r\n    const [state, setState] = React.useState({\r\n        htmlIcon: false,\r\n        cssIcon: false,\r\n        jsIcon: false,\r\n        pythonIcon: false,\r\n        reactIcon: false,\r\n        webglIcon: false,\r\n        firebaseIcon: false,\r\n    })\r\n    const handleChange = (e) => {\r\n        // Get second class of icon\r\n        const target = e.currentTarget.getAttribute('class').split(' ')[1]\r\n        setState({\r\n            htmlIcon: false,\r\n            cssIcon: false,\r\n            jsIcon: false,\r\n            pythonIcon: false,\r\n            [target]: !state[target]\r\n        })\r\n    }\r\n    return (\r\n        <section className=\"skills\">\r\n\r\n            {lang === \"ENG\"\r\n                ? <>\r\n                    <h2>Hi, I'm Aurélien. Welcome to my portfolio !</h2>\r\n                    <Typography paragraph className=\"skillsDescription\">\r\n                        I love programming since 2012, I first started by doing small CLI projects that was useful only for me (usually made with Batch or Visual Basic),\r\n                        then begun using python, to do more helpful applications. I've recently begun to learn web development, I just love it.\r\n        </Typography>\r\n                </>\r\n                : <>\r\n                    <h2>Je m'appelle Aurélien. Bienvenue !</h2>\r\n                    <Typography paragraph className=\"skillsDescription\">\r\n                        J'adore programmer depuis 2012, j'ai d'abbords commencé par faire des petits projets \"CLI\" à des fins personnels (fait en Batch ou Visual Basic),\r\n                        puis j'ai decouvert Python ce qui m'as permis de faire des projets personnels plus complexes. J'ai recemment debuté le devellopement web, j'adore ça!\r\n        </Typography>\r\n                </>\r\n            }\r\n\r\n\r\n            {lang === \"ENG\"\r\n                ? <>\r\n                    <h2>My skills</h2>\r\n                    <h4>The langages I speak</h4>\r\n                </>\r\n                : <>\r\n                    <h2>Mes compétences</h2>\r\n                    <h4>Les langages dont je parle</h4>\r\n                </>\r\n            }\r\n            <div className=\"skillsCtnr\">\r\n                {skillsData.map(skill => {\r\n                    return (\r\n                        <div key={skill.imgId} className={`icon ${skill.iconClass}`} onClick={handleChange}>\r\n                            <img src={skill.iconSrc} id={skill.imgId} alt={`${skill.imgAlt} icon`} width={iconsSize} height={iconsSize}></img>\r\n                            <span className=\"tooltiptext\">{skill.title}</span>\r\n                            <Grow in={state[skill.iconClass]}>\r\n                                <Paper elevation={4} className={classes.paper}>\r\n                                    <Typography className={classes.typo}>\r\n                                        {skill.title}\r\n                                    </Typography>\r\n                                    <Divider />\r\n                                    <Typography className={classes.typo}>\r\n                                        {lang === \"ENG\"\r\n                                            ? skill.textENG\r\n                                            : skill.textFR\r\n                                        }\r\n                                    </Typography>\r\n                                </Paper>\r\n                            </Grow>\r\n                        </div>\r\n                    )\r\n                })}\r\n            </div>\r\n\r\n            {lang === \"ENG\"\r\n                ? <h4>Technologies I am using</h4>\r\n                : <h4>Les technologies que j'utilise</h4>\r\n            }\r\n            <div className=\"techCtnr\">\r\n                {techData.map(tech => {\r\n                    return (\r\n                        <div key={tech.imgId} className={`icon ${tech.iconClass}`} onClick={handleChange}>\r\n                            {\r\n                                tech.title == 'Firebase'\r\n                                    ? <img src={tech.iconSrc} id={tech.imgId} alt={`${tech.imgAlt} icon`} width={64} height={87}></img>\r\n                                    : <img src={tech.iconSrc} id={tech.imgId} alt={`${tech.imgAlt} icon`} width={iconsSize} height={iconsSize}></img>\r\n                            }\r\n                            <span className=\"tooltiptext\">{tech.title}</span>\r\n                            <Grow in={state[tech.iconClass]}>\r\n                                <Paper elevation={4} className={classes.paper}>\r\n                                    <Typography className={classes.typo}>\r\n                                        {tech.title}\r\n                                    </Typography>\r\n                                    <Divider />\r\n                                    <Typography className={classes.typo}>\r\n                                        {lang === \"ENG\"\r\n                                            ? tech.textENG\r\n                                            : tech.textFR\r\n                                        }\r\n                                    </Typography>\r\n                                </Paper>\r\n                            </Grow>\r\n                        </div>\r\n                    )\r\n                })}\r\n            </div>\r\n        </section>\r\n    )\r\n\r\n}\r\n\r\nexport default Skills","import React from 'react'\r\nimport './styles/Projects.css'\r\nconst iconsSize = \"90px\"\r\nconst Projects = () => {\r\n    const projectsNames = [\"ponctual\", \"dirCleaner\", \"winCrypt\", \"connect4\", \"nezzarChat\", \"slh\"]\r\n    return (\r\n        <section className=\"projects\">\r\n            <h2>My last projects</h2>\r\n            <div className=\"projectsCtnr\">\r\n                \r\n                <article className=\"project ponctual\">\r\n\r\n                </article>\r\n                <article className=\"project dirCleaner\">\r\n\r\n                </article>\r\n                <article className=\"project winCrypt\">\r\n\r\n                </article>\r\n                <article className=\"project connect4\">\r\n\r\n                </article>\r\n                <article className=\"project nezzarChat\">\r\n\r\n                </article>\r\n                <article className=\"project slh\">\r\n\r\n                </article>\r\n            </div>\r\n        </section>\r\n    )\r\n\r\n}\r\n\r\nexport default Projects","import React from 'react'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport \"./styles/Contact.css\"\r\nimport twitterIcon from '../../assets/twitterIcon.svg'\r\nimport githubIcon from '../../assets/githubIcon.svg'\r\nimport linkedinIcon from '../../assets/linkedinLogo.svg'\r\nimport { TradContext } from '../../contexts/TradContext';\r\n\r\nconst iconSize = 35\r\nconst Contact = () => {\r\n    let lang = React.useContext(TradContext);\r\n    return (\r\n        <section className=\"contact\">\r\n\r\n            {lang === \"ENG\"\r\n                ? <h2>Reach me on social medias...</h2>\r\n                : <h2>Retrouvez moi sur les résaux sociaux...</h2>\r\n            }\r\n            <div className=\"contactIcons\">\r\n                <img src={twitterIcon} alt=\"Twitter Icon\" width={iconSize} height={iconSize}></img>\r\n                <img src={githubIcon} alt=\"Github Icon\" width={iconSize} height={iconSize}></img>\r\n                <img src={linkedinIcon} alt=\"Linkedin Icon\" width={iconSize} height={iconSize}></img>\r\n            </div>\r\n\r\n            {lang === \"ENG\"\r\n                ? <h5>... or send me an email : </h5>\r\n                : <h5>... ou envoyez-moi un email : </h5>\r\n            }\r\n            \r\n            <div className=\"emailCtnr\">\r\n                <p><a href=\"mailto:aurelien.nezzar@outlooK.fr?subject=SweetWords\">\r\n                    aurelien.nezzar@outlooK.fr</a></p>\r\n            </div>\r\n        </section>\r\n    )\r\n\r\n}\r\n\r\nexport default Contact","import React from 'react';\r\nimport Welcome from './sections/Welcome'\r\nimport About from './sections/About'\r\nimport Skills from './sections/Skills'\r\nimport Projects from './sections/Projects'\r\nimport Contact from './sections/Contact'\r\n\r\nfunction Main(){\r\n    return (\r\n        <div>\r\n            <About />\r\n            <Skills />\r\n            <Projects />\r\n            <Contact />\r\n        </div>\r\n    )\r\n}\r\nexport default Main;","import React from 'react';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport Hidden from '@material-ui/core/Hidden';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Main from './Main'\r\nimport FaceIcon from '@material-ui/icons/Face'; // About\r\nimport SettingsIcon from '@material-ui/icons/Settings'; // Skills\r\nimport EmojiObjectsIcon from '@material-ui/icons/EmojiObjects';  // Projects\r\n// Contact (mailicon)\r\nimport GetAppIcon from '@material-ui/icons/GetApp';// DL resume\r\nimport Switch from '@material-ui/core/Switch';\r\nimport { Link, animateScroll as scroll } from \"react-scroll\";\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { TradContext } from '../contexts/TradContext';\r\n\r\n\r\n\r\n\r\nconst drawerWidth = 240;\r\nconst flagSize = \"32px\"\r\nconst flagStyles = {\r\n    broderRadius: \"20px\"\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n    },\r\n    drawer: {\r\n        [theme.breakpoints.up('sm')]: {\r\n            width: drawerWidth,\r\n            flexShrink: 0,\r\n        },\r\n    },\r\n    appBar: {\r\n        zIndex: theme.zIndex.drawer + 1,\r\n    },\r\n    menuButton: {\r\n        [theme.breakpoints.up('sm')]: {\r\n            display: 'none',\r\n        },\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n        fontSize:'25px'\r\n    },\r\n    // necessary for content to be below app bar\r\n    toolbar: theme.mixins.toolbar,\r\n    drawerPaper: {\r\n        width: drawerWidth,\r\n    },\r\n    content: {\r\n        flexGrow: 1,\r\n    },\r\n}));\r\n\r\nfunction Layout(props) {\r\n    const { window } = props;\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const [mobileOpen, setMobileOpen] = React.useState(false);\r\n    const [checkedLng, setCheckedLng] = React.useState(false)\r\n    const [actualLang, setActualLang] = React.useState('ENG')\r\n\r\n    const handleDrawerToggle = () => {\r\n        setMobileOpen(!mobileOpen);\r\n    };\r\n    const handleChange = (event) => {\r\n        setCheckedLng(event.target.checked)\r\n        event.target.checked\r\n            ? setActualLang('FR')\r\n            : setActualLang('ENG')\r\n    };\r\n    const drawerData = [\r\n        [actualLang === \"ENG\" ? 'About' : 'A propos', <FaceIcon />, 'hero'],\r\n        [actualLang === \"ENG\" ? 'Skills' : 'Compétences', <SettingsIcon />, 'skills'],\r\n        [actualLang === \"ENG\" ? 'Projects' : 'Projets', <EmojiObjectsIcon />, 'projects'],\r\n        [actualLang === \"ENG\" ? 'Contact me' : 'Me contacter', <MailIcon />, 'contact'],\r\n    ]\r\n    const drawer = (\r\n        <div>\r\n            <div className={classes.toolbar} />\r\n            <Divider />\r\n            <List>\r\n                {\r\n                    drawerData.map(text => (\r\n                        <Link\r\n                            activeClass=\"active\"\r\n                            to={text[2]}\r\n                            spy={true}\r\n                            smooth={true}\r\n                            offset={-64}\r\n                            duration={100}\r\n                            key={text[0]}>\r\n                            <ListItem button >\r\n                                <ListItemIcon>{text[1]}</ListItemIcon>\r\n                                <ListItemText primary={text[0]} />\r\n                            </ListItem>\r\n                        </Link>\r\n                    ))}\r\n                <ListItem button key=\"Download resume\">\r\n                    <ListItemIcon><GetAppIcon /></ListItemIcon>\r\n                    <ListItemText primary={actualLang === \"ENG\" ? 'Download resume' : 'Télécharger CV'} />\r\n                </ListItem>\r\n\r\n                <ListItem key=\"SwitchLang\">\r\n                    <Typography component=\"div\">\r\n                        <Grid component=\"label\" container alignItems=\"center\" spacing={1}>\r\n                            <Grid item>\r\n                                {/* <img style={flagStyles} src={ukIcon} width={flagSize} height={flagSize}></img> */}\r\n                                ENG\r\n                            </Grid>\r\n                            <Grid item>\r\n                                <Switch\r\n                                    checked={checkedLng}\r\n                                    onChange={handleChange}\r\n                                    name=\"checkedLng\"\r\n                                    color=\"primary\"\r\n                                />\r\n                            </Grid>\r\n                            <Grid item>\r\n                                {/* <img style={flagStyles} src={frIcon} width={flagSize} height={flagSize}></img> */}\r\n                                FR\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Typography>\r\n\r\n                </ListItem>\r\n            </List>\r\n\r\n        </div>\r\n    );\r\n\r\n    const container = window !== undefined ? () => window().document.body : undefined;\r\n    return (\r\n        <div className={classes.root}>\r\n            <CssBaseline />\r\n            <AppBar position=\"fixed\" className={classes.appBar}>\r\n                <Toolbar>\r\n                    <Typography className={classes.title} variant=\"h1\" noWrap>\r\n                        Aurélien NEZZAR\r\n          </Typography>\r\n                    <IconButton\r\n                        color=\"inherit\"\r\n                        aria-label=\"open drawer\"\r\n                        edge=\"end\"\r\n                        onClick={handleDrawerToggle}\r\n                        className={classes.menuButton}\r\n                    >\r\n                        <MenuIcon />\r\n                    </IconButton>\r\n                </Toolbar>\r\n            </AppBar>\r\n            <nav className={classes.drawer} aria-label=\"mailbox folders\">\r\n                {/* The implementation can be swapped with js to avoid SEO duplication of links. */}\r\n                <Hidden smUp implementation=\"css\">\r\n                    <Drawer\r\n                        container={container}\r\n                        variant=\"temporary\"\r\n                        anchor='right'\r\n                        open={mobileOpen}\r\n                        onClose={handleDrawerToggle}\r\n                        classes={{\r\n                            paper: classes.drawerPaper,\r\n                        }}\r\n                        ModalProps={{\r\n                            keepMounted: true, // Better open performance on mobile.\r\n                        }}\r\n                    >\r\n                        {drawer}\r\n                    </Drawer>\r\n                </Hidden>\r\n                <Hidden xsDown implementation=\"css\">\r\n                    <Drawer\r\n                        classes={{\r\n                            paper: classes.drawerPaper,\r\n                        }}\r\n                        variant=\"permanent\"\r\n                        open\r\n                    >\r\n                        {drawer}\r\n                    </Drawer>\r\n                </Hidden>\r\n            </nav>\r\n            <main className={classes.content}>\r\n                <div className={classes.toolbar} />\r\n                <TradContext.Provider value={actualLang}>\r\n                    <Main />\r\n                </TradContext.Provider>\r\n            </main>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Layout;","import React from 'react';\r\nimport Layout from './components/Layout';\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\r\n\r\nfunction App() {\r\n    return (\r\n        <Router>\r\n            <div className=\"App\" >\r\n                <Layout />\r\n            </div>\r\n        </Router>\r\n    )\r\n}\r\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// REACT-ROUTER\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/avatar.564623ae.jpg\";","module.exports = __webpack_public_path__ + \"static/media/illustration.db0b7ae5.png\";","module.exports = __webpack_public_path__ + \"static/media/html5-brands.f7e0c7ae.svg\";","module.exports = __webpack_public_path__ + \"static/media/css3-alt-brands.9c1c2da2.svg\";","module.exports = __webpack_public_path__ + \"static/media/js-brands.a4f804e9.svg\";","module.exports = __webpack_public_path__ + \"static/media/python-brands.32c95a3f.svg\";","module.exports = __webpack_public_path__ + \"static/media/react-brands.a046060a.svg\";","module.exports = __webpack_public_path__ + \"static/media/WebGL_Logo.c36b25d9.svg\";","module.exports = __webpack_public_path__ + \"static/media/firebase-logo.c24b6b9c.png\";","module.exports = __webpack_public_path__ + \"static/media/twitterIcon.923455be.svg\";","module.exports = __webpack_public_path__ + \"static/media/githubIcon.07883e93.svg\";","module.exports = __webpack_public_path__ + \"static/media/linkedinLogo.4b475fb3.svg\";"],"sourceRoot":""}